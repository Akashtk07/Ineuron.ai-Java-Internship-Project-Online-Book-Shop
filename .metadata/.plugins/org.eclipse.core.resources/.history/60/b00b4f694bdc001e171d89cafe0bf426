package com.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.entity.Order_Details;

public class Book_OrderDAOimpl implements Book_OrderDAO {

	private Connection Conn;

	public Book_OrderDAOimpl(Connection conn) {
		super();
		Conn = conn;
	}

//	@Override
//	public int getOrderNumber() {
//		int i=0;
//		try {
//			String sql="select *from book_order";
//			PreparedStatement ps = Conn.prepareStatement(sql);
//			ResultSet rs = ps.executeQuery();	
//			
//			while(rs.next())
//			{
//				i++;
//			}
//			
//		}catch(Exception e)
//		{
//			e.printStackTrace();
//		}
//		
//		
//		return i;
//	}

	@Override
	public boolean saveOrder(List<Order_Details> bd) {
		boolean f =false;
		try {
			String sql="insert into book_order(order_id,user_name,email,address,phone,book_name,author,price,payment)values( ?,?,?,?,?,?,?,?,?)";
			
			Conn.setAutoCommit(false);
			PreparedStatement ps = Conn.prepareStatement(sql);
			
			for(Order_Details b: bd )
			{
				ps.setString(1,b.getOrderID());
				ps.setString(2,b.getUserName());
				ps.setString(3,b.getEmail());
				ps.setString(4,b.getFulladdress());
				ps.setString(5,b.getPhoneNo());
				ps.setString(6,b.getBookName());
				ps.setString(7,b.getAuthor());
				ps.setString(8,b.getPrice());
				ps.setString(9,b.getPaymentType());
				
				ps.addBatch();
			}
			
		int[] count= ps.executeBatch();
		Conn.commit();
		f=true;
		Conn.setAutoCommit(true);
			
		
			
		}catch(Exception e)
		{
			e.printStackTrace();
		}
		return f;
	}
	
	

	@Override
	public List<Order_Details> getBooks(String Email) {
		List<Order_Details> list = new ArrayList<Order_Details>();
		Order_Details o=null;
		
		try {
			String sql="select *from book_order where email=?";
			PreparedStatement ps = Conn.prepareStatement(sql);
			ps.setString(1,Email);
			ResultSet rs =ps.executeQuery();
			
			while(rs.next())
			{
				o=new Order_Details();
				o.setId(rs.getInt(1));
				o.setOrderID(rs.getString(2));
				o.setUserName(rs.getString(3));
				o.setEmail(rs.getString(4));
				o.setFulladdress(rs.getString(5));
				o.setPhoneNo(rs.getString(6));
				o.setBookName(rs.getString(7));
				o.setAuthor(rs.getString(8));
				o.setPrice(rs.getString(9));
				o.setPaymentType(rs.getString(10));
				list.add(o);
			}
			
		}catch(Exception e)
		{
			e.printStackTrace();
		}
		return list;
	}

	@Override
	public List<Order_Details> getAllBooks() {
		List<Order_Details> list = new ArrayList<Order_Details>();
		Order_Details o=null;
		
		try {
			String sql="select *from book_order";
			PreparedStatement ps = Conn.prepareStatement(sql);
			ResultSet rs =ps.executeQuery();
			
			while(rs.next())
			{
				o=new Order_Details();
				o.setId(rs.getInt(1));
				o.setOrderID(rs.getString(2));
				o.setUserName(rs.getString(3));
				o.setEmail(rs.getString(4));
				o.setFulladdress(rs.getString(5));
				o.setPhoneNo(rs.getString(6));
				o.setBookName(rs.getString(7));
				o.setAuthor(rs.getString(8));
				o.setPrice(rs.getString(9));
				o.setPaymentType(rs.getString(10));
				list.add(o);
			}
			
		}catch(Exception e)
		{
			e.printStackTrace();
		}
		return list;
	}

	
	
	

	@Override
	public List<String> getOrderIds(String email) {
	    List<String> orderIds = new ArrayList<>(); // Initialize list to store order IDs

	    try {
	        String sql = "SELECT order_id FROM book_order WHERE email=?";
	        PreparedStatement ps = Conn.prepareStatement(sql);
	        ps.setString(1, email);
	        ResultSet rs = ps.executeQuery();

	        while (rs.next()) {
	            String orderId = rs.getString("order_id");
	            orderIds.add(orderId); // Add each order ID to the list
	        }
	    } catch (Exception e) {
	        e.printStackTrace();
	    }

	    return orderIds; // Return the list of order IDs
	}

	@Override
	public List<String> getOrderIds(int orderid) {

	    List<String> list = new ArrayList<>(); // Initialize list to store order IDs
	    Order_Details o =null;
	    try {
	        String sql = "select *from book_order where order_id=?";
	        PreparedStatement ps = Conn.prepareStatement(sql);
	        ps.setInt(1, orderid);
	        ResultSet rs = ps.executeQuery();


	        while(rs.next())
			{
				o=new Order_Details();
				o.setId(rs.getInt(1));
				o.setOrderID(rs.getString(2));
				o.setUserName(rs.getString(3));
				o.setEmail(rs.getString(4));
				o.setFulladdress(rs.getString(5));
				o.setPhoneNo(rs.getString(6));
				o.setBookName(rs.getString(7));
				o.setAuthor(rs.getString(8));
				o.setPrice(rs.getString(9));
				o.setPaymentType(rs.getString(10));
				list.addAll(o);
			}
	        
	        
	    } catch (Exception e) {
	        e.printStackTrace();
	    }

	    return list;
		
	}
	
	
	
	

}
		
//		try {
//			
//			String sql="select order_id from book_order where email=? ";
//			PreparedStatement ps = Conn.prepareStatement(sql);
//			ps.setString(1,email);
//			Order_Details o=null;
//			ResultSet rs = ps.executeQuery();
//			
//			while(rs.next())
//			{
//				o=new Order_Details();
//				o.setId(rs.getInt(1));
//				o.setOrderID(rs.getString(2));
//				o.setUserName(rs.getString(3));
//				o.setEmail(rs.getString(4));
//				o.setFulladdress(rs.getString(5));
//				o.setPhoneNo(rs.getString(6));
//				o.setBookName(rs.getString(7));
//				o.setAuthor(rs.getString(8));
//				o.setPrice(rs.getString(9));
//				o.setPaymentType(rs.getString(10));
//				list.add(o);
//			}
//			
//		}catch(Exception e)
//		{
//			e.printStackTrace();
//			
//		}
//		return null;
//	}
//	
	
	
//}
